/*************************************************
    
    class Node {
        public :

        int data;
        Node *next;

        Node(int data) {
            this -> data = data;
            this -> next = NULL;
        }
    };

*************************************************/
     Node* floydDetectLoop(Node* head) {

    if(head == NULL)

        return NULL;

    Node* slow = head;

    Node* fast = head;

    bool cycleFound = false;

    while(slow != NULL && fast !=NULL && fast->next != NULL ) {    

        fast = fast -> next -> next;

        slow = slow -> next;

        if(slow == fast) {

            cycleFound=true;

            fast = head;

            while(fast != slow){

                slow = slow -> next;

                fast = fast -> next;

            }

            return slow;

        }

    }   //cycle is not found -->return NULL

    return NULL;}

 


Node *removeLoop(Node *head)
{ Node* startingNode = floydDetectLoop(head);

    

    if(startingNode == NULL){
     return head;}

    Node* temp = startingNode;

 

    while(temp -> next != startingNode) {

        temp = temp -> next;

    }   
   temp -> next = NULL;

    return head;

}


 //this is written by me its showing error in one code only where cycle starts from 0
//   Node* slow = head;
//     Node* fast =head;
//     if(head==NULL){
//         return head;
//     }
//     while(slow!=NULL && fast!=NULL){
//         fast=fast->next;
//     if(fast!=NULL){
//            fast=fast->next;
//         }
//         slow = slow->next;
//         if(slow==fast){
//           break;
//         }
//     }
//      if(slow==NULL){
//         return head;
//     }
//     fast = head;
   
    
//     while(fast!=slow){
//         slow = slow->next;
//         fast = fast->next;
//     }
    
//     while(fast->next!=slow){
//         fast= fast->next;
//     }
//     fast->next = NULL;
//     return head;  





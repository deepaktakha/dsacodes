/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/
// this is better apprach where we take 2 pointers
 Node* getmiddle(Node* head){
     if(head==NULL || head->next == NULL){
         return head;
     }
     Node* fast = head->next;
     Node* slow = head;
     while(fast!=NULL){
         fast = fast->next;
         if(fast!=NULL){
             fast= fast->next;
         }
         slow = slow->next;
     }
     return slow;
 }
 // this is a normal approach with tc = o(n)
 int getlength(Node* head){
     Node* temp = head;
     int cnt = 0;
     while(temp!=NULL){
         cnt++;
         temp= temp->next;
     }
    // cout<<"len = "<<cnt<<endl;
     return cnt;
 }
Node *findMiddle(Node *head) {
    // Write your code here
     getmiddle(head);//this is of better
    
    //this is of normal approach
    int ans = getlength(head)/2;
    int cnt = 0;
    Node* temp = head; 
    while(cnt<ans){
        temp = temp->next;
        cnt++;
    }
    return temp;
}


/**
 * Definition of doubly linked list:
 * class Node {
 * public:
 *      int data;
 *      Node *prev;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next, Node *prev) {
 *          this->data = data;
 *          this->prev = prev;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node * removeDuplicates(Node *head)
{
    // Write your code here
    if(head==NULL){
        return NULL;
    }
    Node* cur = head;
    while(cur->next!=NULL){
        if(cur->data == cur->next->data){
            Node* next_next = cur->next->next;
            Node* temp = cur->next;
            temp->prev = NULL;
            Node* nodetodelete = temp;
            delete(nodetodelete);
            cur->next = next_next;

        }else{
            cur= cur->next;
        }

    }return head;
}
